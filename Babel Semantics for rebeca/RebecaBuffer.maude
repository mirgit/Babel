
fmod BUFFERS is
    pr ENVIRONMENT .
    ex HANDLERS .
    sort msg .
    op msg : aid hname aid -> msg [ctor] .
    op rcvr : msg -> aid .
    op tag : Env msg -> msg .
    var i j : aid .		var n : hname .
    eq rcvr(msg(i,n,j)) = j .
    op _. name : msg -> hid .		--- not in paper
    eq msg(i,n,j) . name = (i . n ).	--- not in paper
    
    
    sort bufferActor .
    op emptyBA : -> bufferActor [ctor] .
    op append : msg bufferActor -> bufferActor [ctor] .
    op insert : bufferActor msg -> bufferActor .
    op head : bufferActor -> msg .
    op remove : bufferActor msg -> bufferActor .
    op size : bufferActor -> Int .
    op contains : bufferActor msg -> Bool .
    
    vars m m' : msg .		var q : bufferActor .
    
    eq insert(q,m) = if not contains (q,m) then append(m,q) else q fi .
    eq head (append ( m,q)) = if q == emptyBA then m else head(q) fi .
    eq remove (emptyBA,m) = emptyBA .
    eq remove(append(m',q),m) = if m == m' then q else remove(q,m) fi .
    eq size(emptyBA) = 0 .
    eq size(append(m,q)) = 1 + size(q) .
    eq contains(emptyBA,m) = false .
    eq contains(append(m',q),m) = if m == m' then true else contains(q,m) fi .
    
    
    
    sort bufferNet .
    op emptyBN : -> bufferNet [ctor] .
    op add : aid bufferActor bufferNet -> bufferNet [ctor] .
    op insert : bufferNet msg -> bufferNet .
    op remove : bufferNet msg -> bufferNet .
    op getBuff : bufferNet aid -> bufferActor .
    
    
    var b : bufferNet .
    eq insert(emptyBN,m) = emptyBN .
    eq insert( add(i,q,b),m) = if rcvr(m) == i then add(i,insert(q,m),b) else add(i,q,insert(b,m)) fi .
    eq remove(emptyBN,m) = emptyBN .
    eq remove(add(i,q,b),m) = if rcvr(m) == i then add(i,remove(q,m),b) else add(i,q,remove(b,m)) fi .
    eq getBuff(add(i,q,b),j) = if i == j then q else getBuff(b,j) fi .
    
endfm

fmod POLICIES is
    pr BUFFERS .
    op takePolicy : Env bufferActor -> msg .
    op rcvPolicy : bufferActor msg -> Bool .
    op transferPolicy : Env bufferNet -> msg .
    op schedPolicy : Env netState aid -> Bool .
    
    

endfm














