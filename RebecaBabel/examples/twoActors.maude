load ../semantics.maude
---load model-checker.maude


mod MAIN is
    pr COMPOSITION .
    ops sender self dest lst : -> Var .
    ops a b : -> aid .
    ops Const mes1 mes2 : -> hname .
    op initialState : -> Composition .
    eq handler(a . Const) = (dest ! mes1 ; dest ! mes2 ; endH) .
    eq handler(b . mes1) = (lst = 1 ; endH) .
    eq handler(b . mes2) = (lst = lst + 1 ; endH) .
	eq initialState =
	< mt , 
	(a : < mt (self : a) (dest : b) , append(msg(a,Const,a),emptyBA) , Tee >)
	(b : < mt (self : b) (lst : 0) , emptyBA , Tee >)	
	emptyAL ,
	
	< mt topo: (a b deftop) ,emptyBN > > .

endm

search in MAIN : initialState =>* < e1:Env , al:actorList b : < e2:Env , append(msg(a,mes2,b),emptyBA) , x:stmtList > , < e3:Env , buf(b, append(msg(a,mes1,b),emptyBA)) \ emptyBN > > .




--- ******** Note: Also final value of lst in actor b shows the order of execution of messages ********
---search in MAIN : initialState =>! c:Composition .
